{"id":"node_modules/cesium/Source/Scene/BlendEquation.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416},{"name":"../Core/WebGLConstants.js","loc":{"line":1,"column":27},"parent":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Scene\\BlendEquation.js","resolved":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\WebGLConstants.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _WebGLConstants = _interopRequireDefault(require(\"../Core/WebGLConstants.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Determines how two pixels' values are combined.\n *\n * @enum {Number}\n */\nvar BlendEquation = {\n  /**\n   * Pixel values are added componentwise.  This is used in additive blending for translucency.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ADD: _WebGLConstants.default.FUNC_ADD,\n\n  /**\n   * Pixel values are subtracted componentwise (source - destination).  This is used in alpha blending for translucency.\n   *\n   * @type {Number}\n   * @constant\n   */\n  SUBTRACT: _WebGLConstants.default.FUNC_SUBTRACT,\n\n  /**\n   * Pixel values are subtracted componentwise (destination - source).\n   *\n   * @type {Number}\n   * @constant\n   */\n  REVERSE_SUBTRACT: _WebGLConstants.default.FUNC_REVERSE_SUBTRACT,\n\n  /**\n   * Pixel values are given to the minimum function (min(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MIN: _WebGLConstants.default.MIN,\n\n  /**\n   * Pixel values are given to the maximum function (max(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MAX: _WebGLConstants.default.MAX\n};\n\nvar _default = Object.freeze(BlendEquation);\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":3,"column":0}},{"generated":{"line":17,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":0}},{"name":"BlendEquation","generated":{"line":17,"column":4},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":4}},{"generated":{"line":17,"column":17},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":17}},{"generated":{"line":17,"column":20},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":20}},{"generated":{"line":18,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":9,"column":2}},{"name":"ADD","generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":15,"column":2}},{"name":"ADD","generated":{"line":24,"column":2},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":15,"column":2}},{"generated":{"line":24,"column":5},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":15,"column":5}},{"name":"WebGLConstants","generated":{"line":24,"column":7},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":15,"column":7}},{"name":"FUNC_ADD","generated":{"line":24,"column":31},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":15,"column":22}},{"generated":{"line":24,"column":39},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":20}},{"generated":{"line":26,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":17,"column":2}},{"name":"SUBTRACT","generated":{"line":32,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":23,"column":2}},{"name":"SUBTRACT","generated":{"line":32,"column":2},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":23,"column":2}},{"generated":{"line":32,"column":10},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":23,"column":10}},{"name":"WebGLConstants","generated":{"line":32,"column":12},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":23,"column":12}},{"name":"FUNC_SUBTRACT","generated":{"line":32,"column":36},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":23,"column":27}},{"generated":{"line":32,"column":49},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":20}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":25,"column":2}},{"name":"REVERSE_SUBTRACT","generated":{"line":40,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":31,"column":2}},{"name":"REVERSE_SUBTRACT","generated":{"line":40,"column":2},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":31,"column":2}},{"generated":{"line":40,"column":18},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":31,"column":18}},{"name":"WebGLConstants","generated":{"line":40,"column":20},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":31,"column":20}},{"name":"FUNC_REVERSE_SUBTRACT","generated":{"line":40,"column":44},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":31,"column":35}},{"generated":{"line":40,"column":65},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":20}},{"generated":{"line":42,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":33,"column":2}},{"name":"MIN","generated":{"line":50,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":41,"column":2}},{"name":"MIN","generated":{"line":50,"column":2},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":41,"column":2}},{"generated":{"line":50,"column":5},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":41,"column":5}},{"name":"WebGLConstants","generated":{"line":50,"column":7},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":41,"column":7}},{"name":"MIN","generated":{"line":50,"column":31},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":41,"column":22}},{"generated":{"line":50,"column":34},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":20}},{"generated":{"line":52,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":43,"column":2}},{"name":"MAX","generated":{"line":60,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":51,"column":2}},{"name":"MAX","generated":{"line":60,"column":2},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":51,"column":2}},{"generated":{"line":60,"column":5},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":51,"column":5}},{"name":"WebGLConstants","generated":{"line":60,"column":7},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":51,"column":7}},{"name":"MAX","generated":{"line":60,"column":31},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":51,"column":22}},{"generated":{"line":61,"column":0},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":20}},{"generated":{"line":61,"column":1},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":8,"column":0}},{"name":"Object","generated":{"line":63,"column":15},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":53,"column":15}},{"generated":{"line":63,"column":21},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":53,"column":21}},{"name":"freeze","generated":{"line":63,"column":22},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":53,"column":22}},{"generated":{"line":63,"column":28},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":53,"column":15}},{"name":"BlendEquation","generated":{"line":63,"column":29},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":53,"column":29}},{"generated":{"line":63,"column":42},"source":"node_modules/cesium/Source/Scene/BlendEquation.js","original":{"line":53,"column":15}}],"sources":{"node_modules/cesium/Source/Scene/BlendEquation.js":"import WebGLConstants from \"../Core/WebGLConstants.js\";\n\n/**\n * Determines how two pixels' values are combined.\n *\n * @enum {Number}\n */\nvar BlendEquation = {\n  /**\n   * Pixel values are added componentwise.  This is used in additive blending for translucency.\n   *\n   * @type {Number}\n   * @constant\n   */\n  ADD: WebGLConstants.FUNC_ADD,\n\n  /**\n   * Pixel values are subtracted componentwise (source - destination).  This is used in alpha blending for translucency.\n   *\n   * @type {Number}\n   * @constant\n   */\n  SUBTRACT: WebGLConstants.FUNC_SUBTRACT,\n\n  /**\n   * Pixel values are subtracted componentwise (destination - source).\n   *\n   * @type {Number}\n   * @constant\n   */\n  REVERSE_SUBTRACT: WebGLConstants.FUNC_REVERSE_SUBTRACT,\n\n  /**\n   * Pixel values are given to the minimum function (min(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MIN: WebGLConstants.MIN,\n\n  /**\n   * Pixel values are given to the maximum function (max(source, destination)).\n   *\n   * This equation operates on each pixel color component.\n   *\n   * @type {Number}\n   * @constant\n   */\n  MAX: WebGLConstants.MAX,\n};\nexport default Object.freeze(BlendEquation);\n"},"lineCount":null}},"error":null,"hash":"71dc259b759a755f0d252b399aae4547","cacheData":{"env":{}}}