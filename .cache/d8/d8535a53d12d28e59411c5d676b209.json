{"id":"node_modules/cesium/Source/Core/Visibility.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * This enumerated type is used in determining to what extent an object, the occludee,\n * is visible during horizon culling. An occluder may fully block an occludee, in which case\n * it has no visibility, may partially block an occludee from view, or may not block it at all,\n * leading to full visibility.\n *\n * @enum {Number}\n */\nvar Visibility = {\n  /**\n   * Represents that no part of an object is visible.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NONE: -1,\n\n  /**\n   * Represents that part, but not all, of an object is visible\n   *\n   * @type {Number}\n   * @constant\n   */\n  PARTIAL: 0,\n\n  /**\n   * Represents that an object is visible in its entirety.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FULL: 1\n};\n\nvar _default = Object.freeze(Visibility);\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":0}},{"name":"Visibility","generated":{"line":16,"column":4},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":4}},{"generated":{"line":16,"column":14},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":14}},{"generated":{"line":16,"column":17},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":17}},{"generated":{"line":17,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":10,"column":2}},{"name":"NONE","generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":16,"column":2}},{"name":"NONE","generated":{"line":23,"column":2},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":16,"column":2}},{"generated":{"line":23,"column":6},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":16,"column":6}},{"generated":{"line":23,"column":8},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":16,"column":8}},{"generated":{"line":23,"column":9},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":16,"column":9}},{"generated":{"line":23,"column":10},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":17}},{"generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":18,"column":2}},{"name":"PARTIAL","generated":{"line":31,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":24,"column":2}},{"name":"PARTIAL","generated":{"line":31,"column":2},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":24,"column":2}},{"generated":{"line":31,"column":9},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":24,"column":9}},{"generated":{"line":31,"column":11},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":24,"column":11}},{"generated":{"line":31,"column":12},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":17}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":26,"column":2}},{"name":"FULL","generated":{"line":39,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":32,"column":2}},{"name":"FULL","generated":{"line":39,"column":2},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":32,"column":2}},{"generated":{"line":39,"column":6},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":32,"column":6}},{"generated":{"line":39,"column":8},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":32,"column":8}},{"generated":{"line":40,"column":0},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":17}},{"generated":{"line":40,"column":1},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":9,"column":0}},{"name":"Object","generated":{"line":42,"column":15},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":34,"column":15}},{"generated":{"line":42,"column":21},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":34,"column":21}},{"name":"freeze","generated":{"line":42,"column":22},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":34,"column":22}},{"generated":{"line":42,"column":28},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":34,"column":15}},{"name":"Visibility","generated":{"line":42,"column":29},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":34,"column":29}},{"generated":{"line":42,"column":39},"source":"node_modules/cesium/Source/Core/Visibility.js","original":{"line":34,"column":15}}],"sources":{"node_modules/cesium/Source/Core/Visibility.js":"/**\n * This enumerated type is used in determining to what extent an object, the occludee,\n * is visible during horizon culling. An occluder may fully block an occludee, in which case\n * it has no visibility, may partially block an occludee from view, or may not block it at all,\n * leading to full visibility.\n *\n * @enum {Number}\n */\nvar Visibility = {\n  /**\n   * Represents that no part of an object is visible.\n   *\n   * @type {Number}\n   * @constant\n   */\n  NONE: -1,\n\n  /**\n   * Represents that part, but not all, of an object is visible\n   *\n   * @type {Number}\n   * @constant\n   */\n  PARTIAL: 0,\n\n  /**\n   * Represents that an object is visible in its entirety.\n   *\n   * @type {Number}\n   * @constant\n   */\n  FULL: 1,\n};\nexport default Object.freeze(Visibility);\n"},"lineCount":null}},"error":null,"hash":"83c845b4bb68fcd85c9f5b66378fc715","cacheData":{"env":{}}}