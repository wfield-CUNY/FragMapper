{"id":"node_modules/cesium/Source/Shaders/ModelExperimental/FeatureStageCommon.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"vec2 computeSt(float featureId)\\n\\\n{\\n\\\n    float stepX = model_textureStep.x;\\n\\\n    float centerX = model_textureStep.y;\\n\\\n\\n\\\n    #ifdef MULTILINE_BATCH_TEXTURE\\n\\\n    float stepY = model_textureStep.z;\\n\\\n    float centerY = model_textureStep.w;\\n\\\n\\n\\\n    float xId = mod(featureId, model_textureDimensions.x); \\n\\\n    float yId = floor(featureId / model_textureDimensions.x);\\n\\\n    \\n\\\n    return vec2(centerX + (xId * stepX), centerY + (yId * stepY));\\n\\\n    #else\\n\\\n    return vec2(centerX + (featureId * stepX), 0.5);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/FeatureStageCommon.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/FeatureStageCommon.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/ModelExperimental/FeatureStageCommon.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"vec2 computeSt(float featureId)\\n\\\n{\\n\\\n    float stepX = model_textureStep.x;\\n\\\n    float centerX = model_textureStep.y;\\n\\\n\\n\\\n    #ifdef MULTILINE_BATCH_TEXTURE\\n\\\n    float stepY = model_textureStep.z;\\n\\\n    float centerY = model_textureStep.w;\\n\\\n\\n\\\n    float xId = mod(featureId, model_textureDimensions.x); \\n\\\n    float yId = floor(featureId / model_textureDimensions.x);\\n\\\n    \\n\\\n    return vec2(centerX + (xId * stepX), centerY + (yId * stepY));\\n\\\n    #else\\n\\\n    return vec2(centerX + (featureId * stepX), 0.5);\\n\\\n    #endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"bdabd018419a0b26c8bb623f1cd12464","cacheData":{"env":{}}}