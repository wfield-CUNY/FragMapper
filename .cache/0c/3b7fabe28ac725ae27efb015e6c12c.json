{"id":"node_modules/cesium/Source/Shaders/ModelExperimental/GeometryStageVS.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"void pointStage()\\n\\\n{\\n\\\n    gl_PointSize = 4.0;\\n\\\n}\\n\\\n\\n\\\nvoid geometryStage(inout ProcessedAttributes attributes) \\n\\\n{\\n\\\n    // Compute positions in different coordinate systems\\n\\\n    vec3 positionMC = attributes.positionMC;\\n\\\n    v_positionMC = positionMC;\\n\\\n    v_positionEC = (czm_modelView * vec4(positionMC, 1.0)).xyz;\\n\\\n    gl_Position = czm_modelViewProjection * vec4(positionMC, 1.0);\\n\\\n\\n\\\n    // Sometimes the fragment shader needs this (e.g. custom shaders)\\n\\\n    #ifdef COMPUTE_POSITION_WC\\n\\\n    // Note that this is a 32-bit position which may result in jitter on small\\n\\\n    // scales.\\n\\\n    v_positionWC = (czm_model * vec4(positionMC, 1.0)).xyz;\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_NORMALS\\n\\\n    v_normalEC = czm_normal * attributes.normalMC;\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_TANGENTS\\n\\\n    v_tangentEC = normalize(czm_normal * attributes.tangentMC);    \\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_BITANGENTS\\n\\\n    v_bitangentEC = normalize(czm_normal * attributes.bitangentMC);\\n\\\n    #endif\\n\\\n\\n\\\n    // All other varyings need to be dynamically generated in\\n\\\n    // GeometryPipelineStage\\n\\\n    setDynamicVaryings(attributes);\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/GeometryStageVS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/GeometryStageVS.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/ModelExperimental/GeometryStageVS.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"void pointStage()\\n\\\n{\\n\\\n    gl_PointSize = 4.0;\\n\\\n}\\n\\\n\\n\\\nvoid geometryStage(inout ProcessedAttributes attributes) \\n\\\n{\\n\\\n    // Compute positions in different coordinate systems\\n\\\n    vec3 positionMC = attributes.positionMC;\\n\\\n    v_positionMC = positionMC;\\n\\\n    v_positionEC = (czm_modelView * vec4(positionMC, 1.0)).xyz;\\n\\\n    gl_Position = czm_modelViewProjection * vec4(positionMC, 1.0);\\n\\\n\\n\\\n    // Sometimes the fragment shader needs this (e.g. custom shaders)\\n\\\n    #ifdef COMPUTE_POSITION_WC\\n\\\n    // Note that this is a 32-bit position which may result in jitter on small\\n\\\n    // scales.\\n\\\n    v_positionWC = (czm_model * vec4(positionMC, 1.0)).xyz;\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_NORMALS\\n\\\n    v_normalEC = czm_normal * attributes.normalMC;\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_TANGENTS\\n\\\n    v_tangentEC = normalize(czm_normal * attributes.tangentMC);    \\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_BITANGENTS\\n\\\n    v_bitangentEC = normalize(czm_normal * attributes.bitangentMC);\\n\\\n    #endif\\n\\\n\\n\\\n    // All other varyings need to be dynamically generated in\\n\\\n    // GeometryPipelineStage\\n\\\n    setDynamicVaryings(attributes);\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"2ddb9cfeaabbc284adef48a0c3270c9b","cacheData":{"env":{}}}