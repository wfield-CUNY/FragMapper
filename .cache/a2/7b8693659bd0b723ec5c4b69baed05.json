{"id":"node_modules/cesium/Source/Shaders/PostProcessStages/AcesTonemappingStage.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"uniform sampler2D colorTexture;\\n\\\n\\n\\\nvarying vec2 v_textureCoordinates;\\n\\\n\\n\\\n#ifdef AUTO_EXPOSURE\\n\\\nuniform sampler2D autoExposure;\\n\\\n#endif\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    vec4 fragmentColor = texture2D(colorTexture, v_textureCoordinates);\\n\\\n    vec3 color = fragmentColor.rgb;\\n\\\n\\n\\\n#ifdef AUTO_EXPOSURE\\n\\\n    color /= texture2D(autoExposure, vec2(0.5)).r;\\n\\\n#endif\\n\\\n    color = czm_acesTonemapping(color);\\n\\\n    color = czm_inverseGamma(color);\\n\\\n\\n\\\n    gl_FragColor = vec4(color, fragmentColor.a);\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/PostProcessStages/AcesTonemappingStage.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/PostProcessStages/AcesTonemappingStage.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/PostProcessStages/AcesTonemappingStage.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"uniform sampler2D colorTexture;\\n\\\n\\n\\\nvarying vec2 v_textureCoordinates;\\n\\\n\\n\\\n#ifdef AUTO_EXPOSURE\\n\\\nuniform sampler2D autoExposure;\\n\\\n#endif\\n\\\n\\n\\\nvoid main()\\n\\\n{\\n\\\n    vec4 fragmentColor = texture2D(colorTexture, v_textureCoordinates);\\n\\\n    vec3 color = fragmentColor.rgb;\\n\\\n\\n\\\n#ifdef AUTO_EXPOSURE\\n\\\n    color /= texture2D(autoExposure, vec2(0.5)).r;\\n\\\n#endif\\n\\\n    color = czm_acesTonemapping(color);\\n\\\n    color = czm_inverseGamma(color);\\n\\\n\\n\\\n    gl_FragColor = vec4(color, fragmentColor.a);\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"5b44ea1646abfb79a4f074f68e1df0f5","cacheData":{"env":{}}}