{"id":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ModelAlphaOptions;\n\n/**\n * Options for configuring the {@link AlphaPipelineStage}\n *\n * @alias ModelAlphaOptions\n * @constructor\n *\n * @private\n */\nfunction ModelAlphaOptions() {\n  /**\n   * Which render pass will render the model.\n   *\n   * @type {Pass}\n   * @private\n   */\n  this.pass = undefined;\n  /**\n   * Which method to use for handling the alpha channel in the fragment shader.\n   *\n   * @type {AlphaMode}\n   * @private\n   */\n\n  this.alphaMode = undefined;\n  /**\n   * When the alpha mode is MASK, this determines the alpha threshold\n   * below which fragments are discarded\n   *\n   * @type {Number}\n   * @private\n   */\n\n  this.alphaCutoff = undefined;\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":1,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":9,"column":15}},{"name":"ModelAlphaOptions","generated":{"line":16,"column":9},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":9,"column":24}},{"generated":{"line":16,"column":26},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":9,"column":15}},{"generated":{"line":16,"column":29},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":9,"column":44}},{"generated":{"line":17,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":10,"column":2}},{"generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":16,"column":2}},{"name":"pass","generated":{"line":23,"column":7},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":16,"column":7}},{"generated":{"line":23,"column":11},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":16,"column":2}},{"name":"undefined","generated":{"line":23,"column":14},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":16,"column":14}},{"generated":{"line":23,"column":23},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":16,"column":2}},{"generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":17,"column":2}},{"generated":{"line":31,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":23,"column":2}},{"name":"alphaMode","generated":{"line":31,"column":7},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":23,"column":7}},{"generated":{"line":31,"column":16},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":23,"column":2}},{"name":"undefined","generated":{"line":31,"column":19},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":23,"column":19}},{"generated":{"line":31,"column":28},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":23,"column":2}},{"generated":{"line":32,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":24,"column":2}},{"generated":{"line":40,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":31,"column":2}},{"name":"alphaCutoff","generated":{"line":40,"column":7},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":31,"column":7}},{"generated":{"line":40,"column":18},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":31,"column":2}},{"name":"undefined","generated":{"line":40,"column":21},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":31,"column":21}},{"generated":{"line":40,"column":30},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":31,"column":2}},{"generated":{"line":41,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js","original":{"line":32,"column":1}}],"sources":{"node_modules/cesium/Source/Scene/ModelExperimental/ModelAlphaOptions.js":"/**\n * Options for configuring the {@link AlphaPipelineStage}\n *\n * @alias ModelAlphaOptions\n * @constructor\n *\n * @private\n */\nexport default function ModelAlphaOptions() {\n  /**\n   * Which render pass will render the model.\n   *\n   * @type {Pass}\n   * @private\n   */\n  this.pass = undefined;\n  /**\n   * Which method to use for handling the alpha channel in the fragment shader.\n   *\n   * @type {AlphaMode}\n   * @private\n   */\n  this.alphaMode = undefined;\n  /**\n   * When the alpha mode is MASK, this determines the alpha threshold\n   * below which fragments are discarded\n   *\n   * @type {Number}\n   * @private\n   */\n  this.alphaCutoff = undefined;\n}\n"},"lineCount":null}},"error":null,"hash":"12616e8734d606e14efd6f9478ed0577","cacheData":{"env":{}}}