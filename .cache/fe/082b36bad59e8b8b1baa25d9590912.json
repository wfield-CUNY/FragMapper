{"id":"node_modules/cesium/Source/Core/TerrainMesh.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416},{"name":"./defaultValue.js","loc":{"line":1,"column":25},"parent":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\TerrainMesh.js","resolved":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\defaultValue.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defaultValue = _interopRequireDefault(require(\"./defaultValue.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A mesh plus related metadata for a single tile of terrain.  Instances of this type are\n * usually created from raw {@link TerrainData}.\n *\n * @alias TerrainMesh\n * @constructor\n *\n * @param {Cartesian3} center The center of the tile.  Vertex positions are specified relative to this center.\n * @param {Float32Array} vertices The vertex data, including positions, texture coordinates, and heights.\n *                       The vertex data is in the order [X, Y, Z, H, U, V], where X, Y, and Z represent\n *                       the Cartesian position of the vertex, H is the height above the ellipsoid, and\n *                       U and V are the texture coordinates.\n * @param {Uint8Array|Uint16Array|Uint32Array} indices The indices describing how the vertices are connected to form triangles.\n * @param {Number} indexCountWithoutSkirts The index count of the mesh not including skirts.\n * @param {Number} vertexCountWithoutSkirts The vertex count of the mesh not including skirts.\n * @param {Number} minimumHeight The lowest height in the tile, in meters above the ellipsoid.\n * @param {Number} maximumHeight The highest height in the tile, in meters above the ellipsoid.\n * @param {BoundingSphere} boundingSphere3D A bounding sphere that completely contains the tile.\n * @param {Cartesian3} occludeePointInScaledSpace The occludee point of the tile, represented in ellipsoid-\n *                     scaled space, and used for horizon culling.  If this point is below the horizon,\n *                     the tile is considered to be entirely below the horizon.\n * @param {Number} [vertexStride=6] The number of components in each vertex.\n * @param {OrientedBoundingBox} [orientedBoundingBox] A bounding box that completely contains the tile.\n * @param {TerrainEncoding} encoding Information used to decode the mesh.\n * @param {Number[]} westIndicesSouthToNorth The indices of the vertices on the Western edge of the tile, ordered from South to North (clockwise).\n * @param {Number[]} southIndicesEastToWest The indices of the vertices on the Southern edge of the tile, ordered from East to West (clockwise).\n * @param {Number[]} eastIndicesNorthToSouth The indices of the vertices on the Eastern edge of the tile, ordered from North to South (clockwise).\n * @param {Number[]} northIndicesWestToEast The indices of the vertices on the Northern edge of the tile, ordered from West to East (clockwise).\n *\n * @private\n */\nfunction TerrainMesh(center, vertices, indices, indexCountWithoutSkirts, vertexCountWithoutSkirts, minimumHeight, maximumHeight, boundingSphere3D, occludeePointInScaledSpace, vertexStride, orientedBoundingBox, encoding, westIndicesSouthToNorth, southIndicesEastToWest, eastIndicesNorthToSouth, northIndicesWestToEast) {\n  /**\n   * The center of the tile.  Vertex positions are specified relative to this center.\n   * @type {Cartesian3}\n   */\n  this.center = center;\n  /**\n   * The vertex data, including positions, texture coordinates, and heights.\n   * The vertex data is in the order [X, Y, Z, H, U, V], where X, Y, and Z represent\n   * the Cartesian position of the vertex, H is the height above the ellipsoid, and\n   * U and V are the texture coordinates.  The vertex data may have additional attributes after those\n   * mentioned above when the {@link TerrainMesh#stride} is greater than 6.\n   * @type {Float32Array}\n   */\n\n  this.vertices = vertices;\n  /**\n   * The number of components in each vertex.  Typically this is 6 for the 6 components\n   * [X, Y, Z, H, U, V], but if each vertex has additional data (such as a vertex normal), this value\n   * may be higher.\n   * @type {Number}\n   */\n\n  this.stride = (0, _defaultValue.default)(vertexStride, 6);\n  /**\n   * The indices describing how the vertices are connected to form triangles.\n   * @type {Uint8Array|Uint16Array|Uint32Array}\n   */\n\n  this.indices = indices;\n  /**\n   * The index count of the mesh not including skirts.\n   * @type {Number}\n   */\n\n  this.indexCountWithoutSkirts = indexCountWithoutSkirts;\n  /**\n   * The vertex count of the mesh not including skirts.\n   * @type {Number}\n   */\n\n  this.vertexCountWithoutSkirts = vertexCountWithoutSkirts;\n  /**\n   * The lowest height in the tile, in meters above the ellipsoid.\n   * @type {Number}\n   */\n\n  this.minimumHeight = minimumHeight;\n  /**\n   * The highest height in the tile, in meters above the ellipsoid.\n   * @type {Number}\n   */\n\n  this.maximumHeight = maximumHeight;\n  /**\n   * A bounding sphere that completely contains the tile.\n   * @type {BoundingSphere}\n   */\n\n  this.boundingSphere3D = boundingSphere3D;\n  /**\n   * The occludee point of the tile, represented in ellipsoid-\n   * scaled space, and used for horizon culling.  If this point is below the horizon,\n   * the tile is considered to be entirely below the horizon.\n   * @type {Cartesian3}\n   */\n\n  this.occludeePointInScaledSpace = occludeePointInScaledSpace;\n  /**\n   * A bounding box that completely contains the tile.\n   * @type {OrientedBoundingBox}\n   */\n\n  this.orientedBoundingBox = orientedBoundingBox;\n  /**\n   * Information for decoding the mesh vertices.\n   * @type {TerrainEncoding}\n   */\n\n  this.encoding = encoding;\n  /**\n   * The indices of the vertices on the Western edge of the tile, ordered from South to North (clockwise).\n   * @type {Number[]}\n   */\n\n  this.westIndicesSouthToNorth = westIndicesSouthToNorth;\n  /**\n   * The indices of the vertices on the Southern edge of the tile, ordered from East to West (clockwise).\n   * @type {Number[]}\n   */\n\n  this.southIndicesEastToWest = southIndicesEastToWest;\n  /**\n   * The indices of the vertices on the Eastern edge of the tile, ordered from North to South (clockwise).\n   * @type {Number[]}\n   */\n\n  this.eastIndicesNorthToSouth = eastIndicesNorthToSouth;\n  /**\n   * The indices of the vertices on the Northern edge of the tile, ordered from West to East (clockwise).\n   * @type {Number[]}\n   */\n\n  this.northIndicesWestToEast = northIndicesWestToEast;\n}\n\nvar _default = TerrainMesh;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":3,"column":0}},{"generated":{"line":43,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"TerrainMesh","generated":{"line":43,"column":9},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":9}},{"generated":{"line":43,"column":20},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"center","generated":{"line":43,"column":21},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":35,"column":2}},{"generated":{"line":43,"column":27},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"vertices","generated":{"line":43,"column":29},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":36,"column":2}},{"generated":{"line":43,"column":37},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"indices","generated":{"line":43,"column":39},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":37,"column":2}},{"generated":{"line":43,"column":46},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"indexCountWithoutSkirts","generated":{"line":43,"column":48},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":38,"column":2}},{"generated":{"line":43,"column":71},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"vertexCountWithoutSkirts","generated":{"line":43,"column":73},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":39,"column":2}},{"generated":{"line":43,"column":97},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"minimumHeight","generated":{"line":43,"column":99},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":40,"column":2}},{"generated":{"line":43,"column":112},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"maximumHeight","generated":{"line":43,"column":114},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":41,"column":2}},{"generated":{"line":43,"column":127},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"boundingSphere3D","generated":{"line":43,"column":129},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":42,"column":2}},{"generated":{"line":43,"column":145},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"occludeePointInScaledSpace","generated":{"line":43,"column":147},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":43,"column":2}},{"generated":{"line":43,"column":173},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"vertexStride","generated":{"line":43,"column":175},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":44,"column":2}},{"generated":{"line":43,"column":187},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"orientedBoundingBox","generated":{"line":43,"column":189},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":45,"column":2}},{"generated":{"line":43,"column":208},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"encoding","generated":{"line":43,"column":210},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":46,"column":2}},{"generated":{"line":43,"column":218},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"westIndicesSouthToNorth","generated":{"line":43,"column":220},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":47,"column":2}},{"generated":{"line":43,"column":243},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"southIndicesEastToWest","generated":{"line":43,"column":245},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":48,"column":2}},{"generated":{"line":43,"column":267},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"eastIndicesNorthToSouth","generated":{"line":43,"column":269},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":49,"column":2}},{"generated":{"line":43,"column":292},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"name":"northIndicesWestToEast","generated":{"line":43,"column":294},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":50,"column":2}},{"generated":{"line":43,"column":316},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":34,"column":0}},{"generated":{"line":43,"column":318},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":51,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":52,"column":2}},{"generated":{"line":48,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":56,"column":2}},{"name":"center","generated":{"line":48,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":56,"column":7}},{"generated":{"line":48,"column":13},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":56,"column":2}},{"name":"center","generated":{"line":48,"column":16},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":56,"column":16}},{"generated":{"line":48,"column":22},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":56,"column":2}},{"generated":{"line":49,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":58,"column":2}},{"generated":{"line":58,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":66,"column":2}},{"name":"vertices","generated":{"line":58,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":66,"column":7}},{"generated":{"line":58,"column":15},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":66,"column":2}},{"name":"vertices","generated":{"line":58,"column":18},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":66,"column":18}},{"generated":{"line":58,"column":26},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":66,"column":2}},{"generated":{"line":59,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":68,"column":2}},{"generated":{"line":66,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":2}},{"name":"stride","generated":{"line":66,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":7}},{"generated":{"line":66,"column":13},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":2}},{"generated":{"line":66,"column":16},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":16}},{"name":"vertexStride","generated":{"line":66,"column":43},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":29}},{"generated":{"line":66,"column":55},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":16}},{"generated":{"line":66,"column":57},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":43}},{"generated":{"line":66,"column":58},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":16}},{"generated":{"line":66,"column":59},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":74,"column":2}},{"generated":{"line":67,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":76,"column":2}},{"generated":{"line":72,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":80,"column":2}},{"name":"indices","generated":{"line":72,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":80,"column":7}},{"generated":{"line":72,"column":14},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":80,"column":2}},{"name":"indices","generated":{"line":72,"column":17},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":80,"column":17}},{"generated":{"line":72,"column":24},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":80,"column":2}},{"generated":{"line":73,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":82,"column":2}},{"generated":{"line":78,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":86,"column":2}},{"name":"indexCountWithoutSkirts","generated":{"line":78,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":86,"column":7}},{"generated":{"line":78,"column":30},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":86,"column":2}},{"name":"indexCountWithoutSkirts","generated":{"line":78,"column":33},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":86,"column":33}},{"generated":{"line":78,"column":56},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":86,"column":2}},{"generated":{"line":79,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":88,"column":2}},{"generated":{"line":84,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":92,"column":2}},{"name":"vertexCountWithoutSkirts","generated":{"line":84,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":92,"column":7}},{"generated":{"line":84,"column":31},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":92,"column":2}},{"name":"vertexCountWithoutSkirts","generated":{"line":84,"column":34},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":92,"column":34}},{"generated":{"line":84,"column":58},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":92,"column":2}},{"generated":{"line":85,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":94,"column":2}},{"generated":{"line":90,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":98,"column":2}},{"name":"minimumHeight","generated":{"line":90,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":98,"column":7}},{"generated":{"line":90,"column":20},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":98,"column":2}},{"name":"minimumHeight","generated":{"line":90,"column":23},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":98,"column":23}},{"generated":{"line":90,"column":36},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":98,"column":2}},{"generated":{"line":91,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":100,"column":2}},{"generated":{"line":96,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":104,"column":2}},{"name":"maximumHeight","generated":{"line":96,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":104,"column":7}},{"generated":{"line":96,"column":20},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":104,"column":2}},{"name":"maximumHeight","generated":{"line":96,"column":23},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":104,"column":23}},{"generated":{"line":96,"column":36},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":104,"column":2}},{"generated":{"line":97,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":106,"column":2}},{"generated":{"line":102,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":110,"column":2}},{"name":"boundingSphere3D","generated":{"line":102,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":110,"column":7}},{"generated":{"line":102,"column":23},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":110,"column":2}},{"name":"boundingSphere3D","generated":{"line":102,"column":26},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":110,"column":26}},{"generated":{"line":102,"column":42},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":110,"column":2}},{"generated":{"line":103,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":112,"column":2}},{"generated":{"line":110,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":118,"column":2}},{"name":"occludeePointInScaledSpace","generated":{"line":110,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":118,"column":7}},{"generated":{"line":110,"column":33},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":118,"column":2}},{"name":"occludeePointInScaledSpace","generated":{"line":110,"column":36},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":118,"column":36}},{"generated":{"line":110,"column":62},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":118,"column":2}},{"generated":{"line":111,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":120,"column":2}},{"generated":{"line":116,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":124,"column":2}},{"name":"orientedBoundingBox","generated":{"line":116,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":124,"column":7}},{"generated":{"line":116,"column":26},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":124,"column":2}},{"name":"orientedBoundingBox","generated":{"line":116,"column":29},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":124,"column":29}},{"generated":{"line":116,"column":48},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":124,"column":2}},{"generated":{"line":117,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":126,"column":2}},{"generated":{"line":122,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":130,"column":2}},{"name":"encoding","generated":{"line":122,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":130,"column":7}},{"generated":{"line":122,"column":15},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":130,"column":2}},{"name":"encoding","generated":{"line":122,"column":18},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":130,"column":18}},{"generated":{"line":122,"column":26},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":130,"column":2}},{"generated":{"line":123,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":132,"column":2}},{"generated":{"line":128,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":136,"column":2}},{"name":"westIndicesSouthToNorth","generated":{"line":128,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":136,"column":7}},{"generated":{"line":128,"column":30},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":136,"column":2}},{"name":"westIndicesSouthToNorth","generated":{"line":128,"column":33},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":136,"column":33}},{"generated":{"line":128,"column":56},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":136,"column":2}},{"generated":{"line":129,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":138,"column":2}},{"generated":{"line":134,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":142,"column":2}},{"name":"southIndicesEastToWest","generated":{"line":134,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":142,"column":7}},{"generated":{"line":134,"column":29},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":142,"column":2}},{"name":"southIndicesEastToWest","generated":{"line":134,"column":32},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":142,"column":32}},{"generated":{"line":134,"column":54},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":142,"column":2}},{"generated":{"line":135,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":144,"column":2}},{"generated":{"line":140,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":148,"column":2}},{"name":"eastIndicesNorthToSouth","generated":{"line":140,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":148,"column":7}},{"generated":{"line":140,"column":30},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":148,"column":2}},{"name":"eastIndicesNorthToSouth","generated":{"line":140,"column":33},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":148,"column":33}},{"generated":{"line":140,"column":56},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":148,"column":2}},{"generated":{"line":141,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":150,"column":2}},{"generated":{"line":146,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":154,"column":2}},{"name":"northIndicesWestToEast","generated":{"line":146,"column":7},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":154,"column":7}},{"generated":{"line":146,"column":29},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":154,"column":2}},{"name":"northIndicesWestToEast","generated":{"line":146,"column":32},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":154,"column":32}},{"generated":{"line":146,"column":54},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":154,"column":2}},{"generated":{"line":147,"column":0},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":155,"column":1}},{"name":"TerrainMesh","generated":{"line":149,"column":15},"source":"node_modules/cesium/Source/Core/TerrainMesh.js","original":{"line":156,"column":15}}],"sources":{"node_modules/cesium/Source/Core/TerrainMesh.js":"import defaultValue from \"./defaultValue.js\";\n\n/**\n * A mesh plus related metadata for a single tile of terrain.  Instances of this type are\n * usually created from raw {@link TerrainData}.\n *\n * @alias TerrainMesh\n * @constructor\n *\n * @param {Cartesian3} center The center of the tile.  Vertex positions are specified relative to this center.\n * @param {Float32Array} vertices The vertex data, including positions, texture coordinates, and heights.\n *                       The vertex data is in the order [X, Y, Z, H, U, V], where X, Y, and Z represent\n *                       the Cartesian position of the vertex, H is the height above the ellipsoid, and\n *                       U and V are the texture coordinates.\n * @param {Uint8Array|Uint16Array|Uint32Array} indices The indices describing how the vertices are connected to form triangles.\n * @param {Number} indexCountWithoutSkirts The index count of the mesh not including skirts.\n * @param {Number} vertexCountWithoutSkirts The vertex count of the mesh not including skirts.\n * @param {Number} minimumHeight The lowest height in the tile, in meters above the ellipsoid.\n * @param {Number} maximumHeight The highest height in the tile, in meters above the ellipsoid.\n * @param {BoundingSphere} boundingSphere3D A bounding sphere that completely contains the tile.\n * @param {Cartesian3} occludeePointInScaledSpace The occludee point of the tile, represented in ellipsoid-\n *                     scaled space, and used for horizon culling.  If this point is below the horizon,\n *                     the tile is considered to be entirely below the horizon.\n * @param {Number} [vertexStride=6] The number of components in each vertex.\n * @param {OrientedBoundingBox} [orientedBoundingBox] A bounding box that completely contains the tile.\n * @param {TerrainEncoding} encoding Information used to decode the mesh.\n * @param {Number[]} westIndicesSouthToNorth The indices of the vertices on the Western edge of the tile, ordered from South to North (clockwise).\n * @param {Number[]} southIndicesEastToWest The indices of the vertices on the Southern edge of the tile, ordered from East to West (clockwise).\n * @param {Number[]} eastIndicesNorthToSouth The indices of the vertices on the Eastern edge of the tile, ordered from North to South (clockwise).\n * @param {Number[]} northIndicesWestToEast The indices of the vertices on the Northern edge of the tile, ordered from West to East (clockwise).\n *\n * @private\n */\nfunction TerrainMesh(\n  center,\n  vertices,\n  indices,\n  indexCountWithoutSkirts,\n  vertexCountWithoutSkirts,\n  minimumHeight,\n  maximumHeight,\n  boundingSphere3D,\n  occludeePointInScaledSpace,\n  vertexStride,\n  orientedBoundingBox,\n  encoding,\n  westIndicesSouthToNorth,\n  southIndicesEastToWest,\n  eastIndicesNorthToSouth,\n  northIndicesWestToEast\n) {\n  /**\n   * The center of the tile.  Vertex positions are specified relative to this center.\n   * @type {Cartesian3}\n   */\n  this.center = center;\n\n  /**\n   * The vertex data, including positions, texture coordinates, and heights.\n   * The vertex data is in the order [X, Y, Z, H, U, V], where X, Y, and Z represent\n   * the Cartesian position of the vertex, H is the height above the ellipsoid, and\n   * U and V are the texture coordinates.  The vertex data may have additional attributes after those\n   * mentioned above when the {@link TerrainMesh#stride} is greater than 6.\n   * @type {Float32Array}\n   */\n  this.vertices = vertices;\n\n  /**\n   * The number of components in each vertex.  Typically this is 6 for the 6 components\n   * [X, Y, Z, H, U, V], but if each vertex has additional data (such as a vertex normal), this value\n   * may be higher.\n   * @type {Number}\n   */\n  this.stride = defaultValue(vertexStride, 6);\n\n  /**\n   * The indices describing how the vertices are connected to form triangles.\n   * @type {Uint8Array|Uint16Array|Uint32Array}\n   */\n  this.indices = indices;\n\n  /**\n   * The index count of the mesh not including skirts.\n   * @type {Number}\n   */\n  this.indexCountWithoutSkirts = indexCountWithoutSkirts;\n\n  /**\n   * The vertex count of the mesh not including skirts.\n   * @type {Number}\n   */\n  this.vertexCountWithoutSkirts = vertexCountWithoutSkirts;\n\n  /**\n   * The lowest height in the tile, in meters above the ellipsoid.\n   * @type {Number}\n   */\n  this.minimumHeight = minimumHeight;\n\n  /**\n   * The highest height in the tile, in meters above the ellipsoid.\n   * @type {Number}\n   */\n  this.maximumHeight = maximumHeight;\n\n  /**\n   * A bounding sphere that completely contains the tile.\n   * @type {BoundingSphere}\n   */\n  this.boundingSphere3D = boundingSphere3D;\n\n  /**\n   * The occludee point of the tile, represented in ellipsoid-\n   * scaled space, and used for horizon culling.  If this point is below the horizon,\n   * the tile is considered to be entirely below the horizon.\n   * @type {Cartesian3}\n   */\n  this.occludeePointInScaledSpace = occludeePointInScaledSpace;\n\n  /**\n   * A bounding box that completely contains the tile.\n   * @type {OrientedBoundingBox}\n   */\n  this.orientedBoundingBox = orientedBoundingBox;\n\n  /**\n   * Information for decoding the mesh vertices.\n   * @type {TerrainEncoding}\n   */\n  this.encoding = encoding;\n\n  /**\n   * The indices of the vertices on the Western edge of the tile, ordered from South to North (clockwise).\n   * @type {Number[]}\n   */\n  this.westIndicesSouthToNorth = westIndicesSouthToNorth;\n\n  /**\n   * The indices of the vertices on the Southern edge of the tile, ordered from East to West (clockwise).\n   * @type {Number[]}\n   */\n  this.southIndicesEastToWest = southIndicesEastToWest;\n\n  /**\n   * The indices of the vertices on the Eastern edge of the tile, ordered from North to South (clockwise).\n   * @type {Number[]}\n   */\n  this.eastIndicesNorthToSouth = eastIndicesNorthToSouth;\n\n  /**\n   * The indices of the vertices on the Northern edge of the tile, ordered from West to East (clockwise).\n   * @type {Number[]}\n   */\n  this.northIndicesWestToEast = northIndicesWestToEast;\n}\nexport default TerrainMesh;\n"},"lineCount":null}},"error":null,"hash":"6f033cff922af92dab0721beb5c68194","cacheData":{"env":{}}}