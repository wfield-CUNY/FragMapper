{"id":"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalVS.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"precision highp float;\\n\\\n\\n\\\nvoid main() \\n\\\n{\\n\\\n    // Initialize the attributes struct with all\\n\\\n    // attributes except quantized ones.\\n\\\n    ProcessedAttributes attributes;\\n\\\n    initializeAttributes(attributes);\\n\\\n\\n\\\n    // Dequantize the quantized ones and add them to the\\n\\\n    // attributes struct.\\n\\\n    #ifdef USE_DEQUANTIZATION\\n\\\n    dequantizationStage(attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    // Update the position for this instance in place\\n\\\n    #ifdef HAS_INSTANCING\\n\\\n    instancingStage(attributes.positionMC);\\n\\\n        #ifdef USE_PICKING\\n\\\n        v_pickColor = a_pickColor;\\n\\\n        #endif\\n\\\n    #endif\\n\\\n\\n\\\n    #if defined(HAS_FEATURES) && defined(FEATURE_ID_ATTRIBUTE)\\n\\\n    Feature feature;\\n\\\n    featureStage(feature);\\n\\\n    cpuStylingStage(attributes.positionMC, feature);\\n\\\n    updateFeatureStruct(feature);\\n\\\n    #endif\\n\\\n    \\n\\\n    #ifdef HAS_CUSTOM_VERTEX_SHADER\\n\\\n    customShaderStage(attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    // Compute the final position in each coordinate system needed.\\n\\\n    // This also sets gl_Position.\\n\\\n    geometryStage(attributes);    \\n\\\n\\n\\\n    #ifdef PRIMITIVE_TYPE_POINTS\\n\\\n    pointStage();\\n\\\n    #endif\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalVS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalVS.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalVS.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"precision highp float;\\n\\\n\\n\\\nvoid main() \\n\\\n{\\n\\\n    // Initialize the attributes struct with all\\n\\\n    // attributes except quantized ones.\\n\\\n    ProcessedAttributes attributes;\\n\\\n    initializeAttributes(attributes);\\n\\\n\\n\\\n    // Dequantize the quantized ones and add them to the\\n\\\n    // attributes struct.\\n\\\n    #ifdef USE_DEQUANTIZATION\\n\\\n    dequantizationStage(attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    // Update the position for this instance in place\\n\\\n    #ifdef HAS_INSTANCING\\n\\\n    instancingStage(attributes.positionMC);\\n\\\n        #ifdef USE_PICKING\\n\\\n        v_pickColor = a_pickColor;\\n\\\n        #endif\\n\\\n    #endif\\n\\\n\\n\\\n    #if defined(HAS_FEATURES) && defined(FEATURE_ID_ATTRIBUTE)\\n\\\n    Feature feature;\\n\\\n    featureStage(feature);\\n\\\n    cpuStylingStage(attributes.positionMC, feature);\\n\\\n    updateFeatureStruct(feature);\\n\\\n    #endif\\n\\\n    \\n\\\n    #ifdef HAS_CUSTOM_VERTEX_SHADER\\n\\\n    customShaderStage(attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    // Compute the final position in each coordinate system needed.\\n\\\n    // This also sets gl_Position.\\n\\\n    geometryStage(attributes);    \\n\\\n\\n\\\n    #ifdef PRIMITIVE_TYPE_POINTS\\n\\\n    pointStage();\\n\\\n    #endif\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"76e74881eeea9b250767a879aed4cee8","cacheData":{"env":{}}}