{"id":"node_modules/cesium/Source/Core/binarySearch.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416},{"name":"./Check.js","loc":{"line":1,"column":18},"parent":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\binarySearch.js","resolved":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\Check.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Check = _interopRequireDefault(require(\"./Check.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Finds an item in a sorted array.\n *\n * @function\n * @param {Array} array The sorted array to search.\n * @param {*} itemToFind The item to find in the array.\n * @param {binarySearchComparator} comparator The function to use to compare the item to\n *        elements in the array.\n * @returns {Number} The index of <code>itemToFind</code> in the array, if it exists.  If <code>itemToFind</code>\n *        does not exist, the return value is a negative number which is the bitwise complement (~)\n *        of the index before which the itemToFind should be inserted in order to maintain the\n *        sorted order of the array.\n *\n * @example\n * // Create a comparator function to search through an array of numbers.\n * function comparator(a, b) {\n *     return a - b;\n * };\n * var numbers = [0, 2, 4, 6, 8];\n * var index = Cesium.binarySearch(numbers, 6, comparator); // 3\n */\nfunction binarySearch(array, itemToFind, comparator) {\n  //>>includeStart('debug', pragmas.debug);\n  _Check.default.defined(\"array\", array);\n\n  _Check.default.defined(\"itemToFind\", itemToFind);\n\n  _Check.default.defined(\"comparator\", comparator); //>>includeEnd('debug');\n\n\n  var low = 0;\n  var high = array.length - 1;\n  var i;\n  var comparison;\n\n  while (low <= high) {\n    i = ~~((low + high) / 2);\n    comparison = comparator(array[i], itemToFind);\n\n    if (comparison < 0) {\n      low = i + 1;\n      continue;\n    }\n\n    if (comparison > 0) {\n      high = i - 1;\n      continue;\n    }\n\n    return i;\n  }\n\n  return ~(high + 1);\n}\n/**\n * A function used to compare two items while performing a binary search.\n * @callback binarySearchComparator\n *\n * @param {*} a An item in the array.\n * @param {*} b The item being searched for.\n * @returns {Number} Returns a negative value if <code>a</code> is less than <code>b</code>,\n *          a positive value if <code>a</code> is greater than <code>b</code>, or\n *          0 if <code>a</code> is equal to <code>b</code>.\n *\n * @example\n * function compareNumbers(a, b) {\n *     return a - b;\n * }\n */\n\n\nvar _default = binarySearch;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":0}},{"name":"binarySearch","generated":{"line":33,"column":9},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":9}},{"generated":{"line":33,"column":21},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":0}},{"name":"array","generated":{"line":33,"column":22},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":22}},{"generated":{"line":33,"column":27},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":0}},{"name":"itemToFind","generated":{"line":33,"column":29},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":29}},{"generated":{"line":33,"column":39},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":0}},{"name":"comparator","generated":{"line":33,"column":41},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":41}},{"generated":{"line":33,"column":51},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":0}},{"generated":{"line":33,"column":53},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":53}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":25,"column":2}},{"name":"Check","generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":26,"column":2}},{"name":"defined","generated":{"line":35,"column":17},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":26,"column":8}},{"generated":{"line":35,"column":24},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":26,"column":2}},{"generated":{"line":35,"column":25},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":26,"column":16}},{"generated":{"line":35,"column":32},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":26,"column":2}},{"name":"array","generated":{"line":35,"column":34},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":26,"column":25}},{"generated":{"line":35,"column":39},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":26,"column":2}},{"name":"Check","generated":{"line":37,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":27,"column":2}},{"name":"defined","generated":{"line":37,"column":17},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":27,"column":8}},{"generated":{"line":37,"column":24},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":27,"column":2}},{"generated":{"line":37,"column":25},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":27,"column":16}},{"generated":{"line":37,"column":37},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":27,"column":2}},{"name":"itemToFind","generated":{"line":37,"column":39},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":27,"column":30}},{"generated":{"line":37,"column":49},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":27,"column":2}},{"name":"Check","generated":{"line":39,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":28,"column":2}},{"name":"defined","generated":{"line":39,"column":17},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":28,"column":8}},{"generated":{"line":39,"column":24},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":28,"column":2}},{"generated":{"line":39,"column":25},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":28,"column":16}},{"generated":{"line":39,"column":37},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":28,"column":2}},{"name":"comparator","generated":{"line":39,"column":39},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":28,"column":30}},{"generated":{"line":39,"column":49},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":28,"column":2}},{"generated":{"line":39,"column":51},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":24,"column":53}},{"generated":{"line":39,"column":52},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":29,"column":2}},{"generated":{"line":42,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":31,"column":2}},{"name":"low","generated":{"line":42,"column":6},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":31,"column":6}},{"generated":{"line":42,"column":9},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":31,"column":9}},{"generated":{"line":42,"column":12},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":31,"column":12}},{"generated":{"line":42,"column":13},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":31,"column":2}},{"generated":{"line":43,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":2}},{"name":"high","generated":{"line":43,"column":6},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":6}},{"generated":{"line":43,"column":10},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":10}},{"name":"array","generated":{"line":43,"column":13},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":13}},{"generated":{"line":43,"column":18},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":18}},{"name":"length","generated":{"line":43,"column":19},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":19}},{"generated":{"line":43,"column":25},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":13}},{"generated":{"line":43,"column":28},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":28}},{"generated":{"line":43,"column":29},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":32,"column":2}},{"generated":{"line":44,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":33,"column":2}},{"name":"i","generated":{"line":44,"column":6},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":33,"column":6}},{"generated":{"line":44,"column":7},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":33,"column":2}},{"generated":{"line":45,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":34,"column":2}},{"name":"comparison","generated":{"line":45,"column":6},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":34,"column":6}},{"generated":{"line":45,"column":16},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":34,"column":2}},{"generated":{"line":47,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":36,"column":2}},{"name":"low","generated":{"line":47,"column":9},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":36,"column":9}},{"generated":{"line":47,"column":12},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":36,"column":12}},{"name":"high","generated":{"line":47,"column":16},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":36,"column":16}},{"generated":{"line":47,"column":20},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":36,"column":2}},{"generated":{"line":47,"column":22},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":36,"column":22}},{"name":"i","generated":{"line":48,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":4}},{"name":"i","generated":{"line":48,"column":4},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":4}},{"generated":{"line":48,"column":5},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":5}},{"generated":{"line":48,"column":8},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":8}},{"generated":{"line":48,"column":9},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":9}},{"generated":{"line":48,"column":11},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":11}},{"name":"low","generated":{"line":48,"column":12},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":12}},{"generated":{"line":48,"column":15},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":15}},{"name":"high","generated":{"line":48,"column":18},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":18}},{"generated":{"line":48,"column":22},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":11}},{"generated":{"line":48,"column":26},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":26}},{"generated":{"line":48,"column":27},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":9}},{"generated":{"line":48,"column":28},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":37,"column":4}},{"name":"comparison","generated":{"line":49,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":4}},{"name":"comparison","generated":{"line":49,"column":4},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":4}},{"generated":{"line":49,"column":14},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":14}},{"name":"comparator","generated":{"line":49,"column":17},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":17}},{"generated":{"line":49,"column":27},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":27}},{"name":"array","generated":{"line":49,"column":28},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":28}},{"generated":{"line":49,"column":33},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":33}},{"name":"i","generated":{"line":49,"column":34},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":34}},{"generated":{"line":49,"column":35},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":33}},{"generated":{"line":49,"column":36},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":27}},{"name":"itemToFind","generated":{"line":49,"column":38},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":38}},{"generated":{"line":49,"column":48},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":27}},{"generated":{"line":49,"column":49},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":38,"column":4}},{"generated":{"line":51,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":39,"column":4}},{"name":"comparison","generated":{"line":51,"column":8},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":39,"column":8}},{"generated":{"line":51,"column":18},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":39,"column":18}},{"generated":{"line":51,"column":21},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":39,"column":21}},{"generated":{"line":51,"column":22},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":39,"column":4}},{"generated":{"line":51,"column":24},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":39,"column":24}},{"name":"low","generated":{"line":52,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":40,"column":6}},{"name":"low","generated":{"line":52,"column":6},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":40,"column":6}},{"generated":{"line":52,"column":9},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":40,"column":9}},{"name":"i","generated":{"line":52,"column":12},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":40,"column":12}},{"generated":{"line":52,"column":13},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":40,"column":13}},{"generated":{"line":52,"column":16},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":40,"column":16}},{"generated":{"line":52,"column":17},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":40,"column":6}},{"generated":{"line":53,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":41,"column":6}},{"generated":{"line":54,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":42,"column":5}},{"generated":{"line":56,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":43,"column":4}},{"name":"comparison","generated":{"line":56,"column":8},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":43,"column":8}},{"generated":{"line":56,"column":18},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":43,"column":18}},{"generated":{"line":56,"column":21},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":43,"column":21}},{"generated":{"line":56,"column":22},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":43,"column":4}},{"generated":{"line":56,"column":24},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":43,"column":24}},{"name":"high","generated":{"line":57,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":44,"column":6}},{"name":"high","generated":{"line":57,"column":6},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":44,"column":6}},{"generated":{"line":57,"column":10},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":44,"column":10}},{"name":"i","generated":{"line":57,"column":13},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":44,"column":13}},{"generated":{"line":57,"column":14},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":44,"column":14}},{"generated":{"line":57,"column":17},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":44,"column":17}},{"generated":{"line":57,"column":18},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":44,"column":6}},{"generated":{"line":58,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":45,"column":6}},{"generated":{"line":59,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":46,"column":5}},{"generated":{"line":61,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":47,"column":4}},{"name":"i","generated":{"line":61,"column":11},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":47,"column":11}},{"generated":{"line":61,"column":12},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":47,"column":4}},{"generated":{"line":62,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":48,"column":3}},{"generated":{"line":64,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":49,"column":2}},{"generated":{"line":64,"column":9},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":49,"column":9}},{"name":"high","generated":{"line":64,"column":11},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":49,"column":11}},{"generated":{"line":64,"column":15},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":49,"column":15}},{"generated":{"line":64,"column":18},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":49,"column":18}},{"generated":{"line":64,"column":19},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":49,"column":9}},{"generated":{"line":64,"column":20},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":49,"column":2}},{"generated":{"line":65,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":50,"column":1}},{"generated":{"line":66,"column":0},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":52,"column":0}},{"name":"binarySearch","generated":{"line":83,"column":15},"source":"node_modules/cesium/Source/Core/binarySearch.js","original":{"line":67,"column":15}}],"sources":{"node_modules/cesium/Source/Core/binarySearch.js":"import Check from \"./Check.js\";\n\n/**\n * Finds an item in a sorted array.\n *\n * @function\n * @param {Array} array The sorted array to search.\n * @param {*} itemToFind The item to find in the array.\n * @param {binarySearchComparator} comparator The function to use to compare the item to\n *        elements in the array.\n * @returns {Number} The index of <code>itemToFind</code> in the array, if it exists.  If <code>itemToFind</code>\n *        does not exist, the return value is a negative number which is the bitwise complement (~)\n *        of the index before which the itemToFind should be inserted in order to maintain the\n *        sorted order of the array.\n *\n * @example\n * // Create a comparator function to search through an array of numbers.\n * function comparator(a, b) {\n *     return a - b;\n * };\n * var numbers = [0, 2, 4, 6, 8];\n * var index = Cesium.binarySearch(numbers, 6, comparator); // 3\n */\nfunction binarySearch(array, itemToFind, comparator) {\n  //>>includeStart('debug', pragmas.debug);\n  Check.defined(\"array\", array);\n  Check.defined(\"itemToFind\", itemToFind);\n  Check.defined(\"comparator\", comparator);\n  //>>includeEnd('debug');\n\n  var low = 0;\n  var high = array.length - 1;\n  var i;\n  var comparison;\n\n  while (low <= high) {\n    i = ~~((low + high) / 2);\n    comparison = comparator(array[i], itemToFind);\n    if (comparison < 0) {\n      low = i + 1;\n      continue;\n    }\n    if (comparison > 0) {\n      high = i - 1;\n      continue;\n    }\n    return i;\n  }\n  return ~(high + 1);\n}\n\n/**\n * A function used to compare two items while performing a binary search.\n * @callback binarySearchComparator\n *\n * @param {*} a An item in the array.\n * @param {*} b The item being searched for.\n * @returns {Number} Returns a negative value if <code>a</code> is less than <code>b</code>,\n *          a positive value if <code>a</code> is greater than <code>b</code>, or\n *          0 if <code>a</code> is equal to <code>b</code>.\n *\n * @example\n * function compareNumbers(a, b) {\n *     return a - b;\n * }\n */\nexport default binarySearch;\n"},"lineCount":null}},"error":null,"hash":"2d672c5ea63d116c5aaf168c1a871d29","cacheData":{"env":{}}}