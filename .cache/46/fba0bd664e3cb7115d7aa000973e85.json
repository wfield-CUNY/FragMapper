{"id":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416},{"name":"../Core/Cartesian3.js","loc":{"line":1,"column":23},"parent":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Scene\\QuadtreeOccluders.js","resolved":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\Cartesian3.js"},{"name":"../Core/EllipsoidalOccluder.js","loc":{"line":2,"column":32},"parent":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Scene\\QuadtreeOccluders.js","resolved":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\EllipsoidalOccluder.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _Cartesian = _interopRequireDefault(require(\"../Core/Cartesian3.js\"));\n\nvar _EllipsoidalOccluder = _interopRequireDefault(require(\"../Core/EllipsoidalOccluder.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * A set of occluders that can be used to test quadtree tiles for occlusion.\n *\n * @alias QuadtreeOccluders\n * @constructor\n * @private\n *\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid that potentially occludes tiles.\n */\nfunction QuadtreeOccluders(options) {\n  this._ellipsoid = new _EllipsoidalOccluder.default(options.ellipsoid, _Cartesian.default.ZERO);\n}\n\nObject.defineProperties(QuadtreeOccluders.prototype, {\n  /**\n   * Gets the {@link EllipsoidalOccluder} that can be used to determine if a point is\n   * occluded by an {@link Ellipsoid}.\n   * @type {EllipsoidalOccluder}\n   * @memberof QuadtreeOccluders.prototype\n   */\n  ellipsoid: {\n    get: function () {\n      return this._ellipsoid;\n    }\n  }\n});\nvar _default = QuadtreeOccluders;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":1,"column":0}},{"generated":{"line":10,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":2,"column":0}},{"generated":{"line":14,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":4,"column":0}},{"generated":{"line":23,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":13,"column":0}},{"name":"QuadtreeOccluders","generated":{"line":23,"column":9},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":13,"column":9}},{"generated":{"line":23,"column":26},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":13,"column":0}},{"name":"options","generated":{"line":23,"column":27},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":13,"column":27}},{"generated":{"line":23,"column":34},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":13,"column":0}},{"generated":{"line":23,"column":36},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":13,"column":36}},{"generated":{"line":24,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":2}},{"name":"_ellipsoid","generated":{"line":24,"column":7},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":7}},{"generated":{"line":24,"column":17},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":2}},{"generated":{"line":24,"column":20},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":20}},{"name":"EllipsoidalOccluder","generated":{"line":24,"column":24},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":24}},{"generated":{"line":24,"column":52},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":20}},{"name":"options","generated":{"line":24,"column":53},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":44}},{"generated":{"line":24,"column":60},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":51}},{"name":"ellipsoid","generated":{"line":24,"column":61},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":52}},{"generated":{"line":24,"column":70},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":20}},{"name":"Cartesian3","generated":{"line":24,"column":72},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":63}},{"name":"ZERO","generated":{"line":24,"column":91},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":74}},{"generated":{"line":24,"column":95},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":20}},{"generated":{"line":24,"column":96},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":14,"column":2}},{"generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":15,"column":1}},{"name":"Object","generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":6},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":6}},{"name":"defineProperties","generated":{"line":27,"column":7},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":7}},{"generated":{"line":27,"column":23},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":0}},{"name":"QuadtreeOccluders","generated":{"line":27,"column":24},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":24}},{"generated":{"line":27,"column":41},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":41}},{"name":"prototype","generated":{"line":27,"column":42},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":42}},{"generated":{"line":27,"column":51},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":0}},{"generated":{"line":27,"column":53},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":53}},{"generated":{"line":28,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":18,"column":2}},{"name":"ellipsoid","generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":24,"column":2}},{"name":"ellipsoid","generated":{"line":34,"column":2},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":24,"column":2}},{"generated":{"line":34,"column":11},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":24,"column":11}},{"generated":{"line":34,"column":13},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":24,"column":13}},{"name":"get","generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":25,"column":4}},{"name":"get","generated":{"line":35,"column":4},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":25,"column":4}},{"generated":{"line":35,"column":7},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":25,"column":7}},{"generated":{"line":35,"column":9},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":25,"column":9}},{"generated":{"line":35,"column":21},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":25,"column":21}},{"generated":{"line":36,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":26,"column":6}},{"generated":{"line":36,"column":13},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":26,"column":13}},{"name":"_ellipsoid","generated":{"line":36,"column":18},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":26,"column":18}},{"generated":{"line":36,"column":28},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":26,"column":6}},{"generated":{"line":37,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":27,"column":5}},{"generated":{"line":38,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":24,"column":13}},{"generated":{"line":39,"column":0},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":53}},{"generated":{"line":39,"column":1},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":17,"column":0}},{"name":"QuadtreeOccluders","generated":{"line":40,"column":15},"source":"node_modules/cesium/Source/Scene/QuadtreeOccluders.js","original":{"line":30,"column":15}}],"sources":{"node_modules/cesium/Source/Scene/QuadtreeOccluders.js":"import Cartesian3 from \"../Core/Cartesian3.js\";\nimport EllipsoidalOccluder from \"../Core/EllipsoidalOccluder.js\";\n\n/**\n * A set of occluders that can be used to test quadtree tiles for occlusion.\n *\n * @alias QuadtreeOccluders\n * @constructor\n * @private\n *\n * @param {Ellipsoid} [options.ellipsoid=Ellipsoid.WGS84] The ellipsoid that potentially occludes tiles.\n */\nfunction QuadtreeOccluders(options) {\n  this._ellipsoid = new EllipsoidalOccluder(options.ellipsoid, Cartesian3.ZERO);\n}\n\nObject.defineProperties(QuadtreeOccluders.prototype, {\n  /**\n   * Gets the {@link EllipsoidalOccluder} that can be used to determine if a point is\n   * occluded by an {@link Ellipsoid}.\n   * @type {EllipsoidalOccluder}\n   * @memberof QuadtreeOccluders.prototype\n   */\n  ellipsoid: {\n    get: function () {\n      return this._ellipsoid;\n    },\n  },\n});\nexport default QuadtreeOccluders;\n"},"lineCount":null}},"error":null,"hash":"ca1783813d78af12f1037f13793756f5","cacheData":{"env":{}}}