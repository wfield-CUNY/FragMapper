{"id":"node_modules/cesium/Source/Shaders/Builtin/Functions/HSLToRGB.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"/**\\n\\\n * Converts an HSL color (hue, saturation, lightness) to RGB\\n\\\n * HSL <-> RGB conversion: {@link http://www.chilliant.com/rgb2hsv.html}\\n\\\n *\\n\\\n * @name czm_HSLToRGB\\n\\\n * @glslFunction\\n\\\n * \\n\\\n * @param {vec3} rgb The color in HSL.\\n\\\n *\\n\\\n * @returns {vec3} The color in RGB.\\n\\\n *\\n\\\n * @example\\n\\\n * vec3 hsl = czm_RGBToHSL(rgb);\\n\\\n * hsl.z *= 0.1;\\n\\\n * rgb = czm_HSLToRGB(hsl);\\n\\\n */\\n\\\n\\n\\\nvec3 hueToRGB(float hue)\\n\\\n{\\n\\\n    float r = abs(hue * 6.0 - 3.0) - 1.0;\\n\\\n    float g = 2.0 - abs(hue * 6.0 - 2.0);\\n\\\n    float b = 2.0 - abs(hue * 6.0 - 4.0);\\n\\\n    return clamp(vec3(r, g, b), 0.0, 1.0);\\n\\\n}\\n\\\n\\n\\\nvec3 czm_HSLToRGB(vec3 hsl)\\n\\\n{\\n\\\n    vec3 rgb = hueToRGB(hsl.x);\\n\\\n    float c = (1.0 - abs(2.0 * hsl.z - 1.0)) * hsl.y;\\n\\\n    return (rgb - 0.5) * c + hsl.z;\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/HSLToRGB.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/HSLToRGB.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/Builtin/Functions/HSLToRGB.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * Converts an HSL color (hue, saturation, lightness) to RGB\\n\\\n * HSL <-> RGB conversion: {@link http://www.chilliant.com/rgb2hsv.html}\\n\\\n *\\n\\\n * @name czm_HSLToRGB\\n\\\n * @glslFunction\\n\\\n * \\n\\\n * @param {vec3} rgb The color in HSL.\\n\\\n *\\n\\\n * @returns {vec3} The color in RGB.\\n\\\n *\\n\\\n * @example\\n\\\n * vec3 hsl = czm_RGBToHSL(rgb);\\n\\\n * hsl.z *= 0.1;\\n\\\n * rgb = czm_HSLToRGB(hsl);\\n\\\n */\\n\\\n\\n\\\nvec3 hueToRGB(float hue)\\n\\\n{\\n\\\n    float r = abs(hue * 6.0 - 3.0) - 1.0;\\n\\\n    float g = 2.0 - abs(hue * 6.0 - 2.0);\\n\\\n    float b = 2.0 - abs(hue * 6.0 - 4.0);\\n\\\n    return clamp(vec3(r, g, b), 0.0, 1.0);\\n\\\n}\\n\\\n\\n\\\nvec3 czm_HSLToRGB(vec3 hsl)\\n\\\n{\\n\\\n    vec3 rgb = hueToRGB(hsl.x);\\n\\\n    float c = (1.0 - abs(2.0 * hsl.z - 1.0)) * hsl.y;\\n\\\n    return (rgb - 0.5) * c + hsl.z;\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"09bd1ea2ccc842b59c587af352cf6739","cacheData":{"env":{}}}