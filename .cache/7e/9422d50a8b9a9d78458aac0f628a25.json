{"id":"node_modules/cesium/Source/Core/Interval.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416},{"name":"./defaultValue.js","loc":{"line":1,"column":25},"parent":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\Interval.js","resolved":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\defaultValue.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _defaultValue = _interopRequireDefault(require(\"./defaultValue.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Represents the closed interval [start, stop].\n * @alias Interval\n * @constructor\n *\n * @param {Number} [start=0.0] The beginning of the interval.\n * @param {Number} [stop=0.0] The end of the interval.\n */\nfunction Interval(start, stop) {\n  /**\n   * The beginning of the interval.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.start = (0, _defaultValue.default)(start, 0.0);\n  /**\n   * The end of the interval.\n   * @type {Number}\n   * @default 0.0\n   */\n\n  this.stop = (0, _defaultValue.default)(stop, 0.0);\n}\n\nvar _default = Interval;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":0}},{"name":"Interval","generated":{"line":20,"column":9},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":9}},{"generated":{"line":20,"column":17},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":0}},{"name":"start","generated":{"line":20,"column":18},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":18}},{"generated":{"line":20,"column":23},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":0}},{"name":"stop","generated":{"line":20,"column":25},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":25}},{"generated":{"line":20,"column":29},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":0}},{"generated":{"line":20,"column":31},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":11,"column":31}},{"generated":{"line":21,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":12,"column":2}},{"generated":{"line":26,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":2}},{"name":"start","generated":{"line":26,"column":7},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":7}},{"generated":{"line":26,"column":12},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":2}},{"generated":{"line":26,"column":15},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":15}},{"name":"start","generated":{"line":26,"column":42},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":28}},{"generated":{"line":26,"column":47},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":15}},{"generated":{"line":26,"column":49},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":35}},{"generated":{"line":26,"column":52},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":15}},{"generated":{"line":26,"column":53},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":17,"column":2}},{"generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":18,"column":2}},{"generated":{"line":33,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":2}},{"name":"stop","generated":{"line":33,"column":7},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":7}},{"generated":{"line":33,"column":11},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":2}},{"generated":{"line":33,"column":14},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":14}},{"name":"stop","generated":{"line":33,"column":41},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":27}},{"generated":{"line":33,"column":45},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":14}},{"generated":{"line":33,"column":47},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":33}},{"generated":{"line":33,"column":50},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":14}},{"generated":{"line":33,"column":51},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":23,"column":2}},{"generated":{"line":34,"column":0},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":24,"column":1}},{"name":"Interval","generated":{"line":36,"column":15},"source":"node_modules/cesium/Source/Core/Interval.js","original":{"line":25,"column":15}}],"sources":{"node_modules/cesium/Source/Core/Interval.js":"import defaultValue from \"./defaultValue.js\";\n\n/**\n * Represents the closed interval [start, stop].\n * @alias Interval\n * @constructor\n *\n * @param {Number} [start=0.0] The beginning of the interval.\n * @param {Number} [stop=0.0] The end of the interval.\n */\nfunction Interval(start, stop) {\n  /**\n   * The beginning of the interval.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.start = defaultValue(start, 0.0);\n  /**\n   * The end of the interval.\n   * @type {Number}\n   * @default 0.0\n   */\n  this.stop = defaultValue(stop, 0.0);\n}\nexport default Interval;\n"},"lineCount":null}},"error":null,"hash":"fc0fb6bc8d584bf21fde751e0b0d6ad8","cacheData":{"env":{}}}