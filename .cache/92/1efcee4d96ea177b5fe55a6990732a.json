{"id":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416},{"name":"./DeveloperError.js","loc":{"line":1,"column":27},"parent":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\InterpolationAlgorithm.js","resolved":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\Source\\Core\\DeveloperError.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _DeveloperError = _interopRequireDefault(require(\"./DeveloperError.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The interface for interpolation algorithms.\n *\n * @interface InterpolationAlgorithm\n *\n * @see LagrangePolynomialApproximation\n * @see LinearApproximation\n * @see HermitePolynomialApproximation\n */\nvar InterpolationAlgorithm = {};\n/**\n * Gets the name of this interpolation algorithm.\n * @type {String}\n */\n\nInterpolationAlgorithm.type = undefined;\n/**\n * Given the desired degree, returns the number of data points required for interpolation.\n * @function\n *\n * @param {Number} degree The desired degree of interpolation.\n * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n */\n\nInterpolationAlgorithm.getRequiredDataPoints = _DeveloperError.default.throwInstantiationError;\n/**\n * Performs zero order interpolation.\n * @function\n *\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number[]} [result] An existing array into which to store the result.\n *\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\n\nInterpolationAlgorithm.interpolateOrderZero = _DeveloperError.default.throwInstantiationError;\n/**\n * Performs higher order interpolation.  Not all interpolators need to support high-order interpolation,\n * if this function remains undefined on implementing objects, interpolateOrderZero will be used instead.\n * @function\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number} inputOrder The number of derivatives supplied for input.\n * @param {Number} outputOrder The number of derivatives desired for output.\n * @param {Number[]} [result] An existing array into which to store the result.\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\n\nInterpolationAlgorithm.interpolate = _DeveloperError.default.throwInstantiationError;\nvar _default = InterpolationAlgorithm;\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":1,"column":0}},{"generated":{"line":12,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":12,"column":0}},{"name":"InterpolationAlgorithm","generated":{"line":21,"column":4},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":12,"column":4}},{"generated":{"line":21,"column":26},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":12,"column":26}},{"generated":{"line":21,"column":29},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":12,"column":29}},{"generated":{"line":21,"column":31},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":12,"column":0}},{"generated":{"line":22,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":14,"column":0}},{"name":"InterpolationAlgorithm","generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":18,"column":0}},{"generated":{"line":27,"column":22},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":18,"column":22}},{"name":"type","generated":{"line":27,"column":23},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":18,"column":23}},{"generated":{"line":27,"column":27},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":18,"column":0}},{"name":"undefined","generated":{"line":27,"column":30},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":18,"column":30}},{"generated":{"line":27,"column":39},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":18,"column":0}},{"generated":{"line":28,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":20,"column":0}},{"name":"InterpolationAlgorithm","generated":{"line":36,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":27,"column":0}},{"generated":{"line":36,"column":22},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":27,"column":22}},{"name":"getRequiredDataPoints","generated":{"line":36,"column":23},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":27,"column":23}},{"generated":{"line":36,"column":44},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":27,"column":0}},{"name":"DeveloperError","generated":{"line":36,"column":47},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":28,"column":2}},{"name":"throwInstantiationError","generated":{"line":36,"column":71},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":28,"column":17}},{"generated":{"line":36,"column":94},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":27,"column":0}},{"generated":{"line":37,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":30,"column":0}},{"name":"InterpolationAlgorithm","generated":{"line":53,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":45,"column":0}},{"generated":{"line":53,"column":22},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":45,"column":22}},{"name":"interpolateOrderZero","generated":{"line":53,"column":23},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":45,"column":23}},{"generated":{"line":53,"column":43},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":45,"column":0}},{"name":"DeveloperError","generated":{"line":53,"column":46},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":46,"column":2}},{"name":"throwInstantiationError","generated":{"line":53,"column":70},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":46,"column":17}},{"generated":{"line":53,"column":93},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":45,"column":0}},{"generated":{"line":54,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":48,"column":0}},{"name":"InterpolationAlgorithm","generated":{"line":71,"column":0},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":64,"column":0}},{"generated":{"line":71,"column":22},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":64,"column":22}},{"name":"interpolate","generated":{"line":71,"column":23},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":64,"column":23}},{"generated":{"line":71,"column":34},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":64,"column":0}},{"name":"DeveloperError","generated":{"line":71,"column":37},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":64,"column":37}},{"name":"throwInstantiationError","generated":{"line":71,"column":61},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":64,"column":52}},{"generated":{"line":71,"column":84},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":64,"column":0}},{"name":"InterpolationAlgorithm","generated":{"line":72,"column":15},"source":"node_modules/cesium/Source/Core/InterpolationAlgorithm.js","original":{"line":65,"column":15}}],"sources":{"node_modules/cesium/Source/Core/InterpolationAlgorithm.js":"import DeveloperError from \"./DeveloperError.js\";\n\n/**\n * The interface for interpolation algorithms.\n *\n * @interface InterpolationAlgorithm\n *\n * @see LagrangePolynomialApproximation\n * @see LinearApproximation\n * @see HermitePolynomialApproximation\n */\nvar InterpolationAlgorithm = {};\n\n/**\n * Gets the name of this interpolation algorithm.\n * @type {String}\n */\nInterpolationAlgorithm.type = undefined;\n\n/**\n * Given the desired degree, returns the number of data points required for interpolation.\n * @function\n *\n * @param {Number} degree The desired degree of interpolation.\n * @returns {Number} The number of required data points needed for the desired degree of interpolation.\n */\nInterpolationAlgorithm.getRequiredDataPoints =\n  DeveloperError.throwInstantiationError;\n\n/**\n * Performs zero order interpolation.\n * @function\n *\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number[]} [result] An existing array into which to store the result.\n *\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nInterpolationAlgorithm.interpolateOrderZero =\n  DeveloperError.throwInstantiationError;\n\n/**\n * Performs higher order interpolation.  Not all interpolators need to support high-order interpolation,\n * if this function remains undefined on implementing objects, interpolateOrderZero will be used instead.\n * @function\n * @param {Number} x The independent variable for which the dependent variables will be interpolated.\n * @param {Number[]} xTable The array of independent variables to use to interpolate.  The values\n * in this array must be in increasing order and the same value must not occur twice in the array.\n * @param {Number[]} yTable The array of dependent variables to use to interpolate.  For a set of three\n * dependent values (p,q,w) at time 1 and time 2 this should be as follows: {p1, q1, w1, p2, q2, w2}.\n * @param {Number} yStride The number of dependent variable values in yTable corresponding to\n * each independent variable value in xTable.\n * @param {Number} inputOrder The number of derivatives supplied for input.\n * @param {Number} outputOrder The number of derivatives desired for output.\n * @param {Number[]} [result] An existing array into which to store the result.\n * @returns {Number[]} The array of interpolated values, or the result parameter if one was provided.\n */\nInterpolationAlgorithm.interpolate = DeveloperError.throwInstantiationError;\nexport default InterpolationAlgorithm;\n"},"lineCount":null}},"error":null,"hash":"29e969fa5c81af82a0a2def0737dc1bb","cacheData":{"env":{}}}