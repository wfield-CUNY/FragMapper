{"id":"node_modules/cesium/Source/Shaders/Builtin/Functions/transformPlane.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"/**\\n\\\n * Transforms a plane.\\n\\\n * \\n\\\n * @name czm_transformPlane\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {vec4} plane The plane in Hessian Normal Form.\\n\\\n * @param {mat4} transform The inverse-transpose of a transformation matrix.\\n\\\n */\\n\\\nvec4 czm_transformPlane(vec4 plane, mat4 transform) {\\n\\\n    vec4 transformedPlane = transform * plane;\\n\\\n    // Convert the transformed plane to Hessian Normal Form\\n\\\n    float normalMagnitude = length(transformedPlane.xyz);\\n\\\n    return transformedPlane / normalMagnitude;\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/transformPlane.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/Builtin/Functions/transformPlane.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/Builtin/Functions/transformPlane.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"/**\\n\\\n * Transforms a plane.\\n\\\n * \\n\\\n * @name czm_transformPlane\\n\\\n * @glslFunction\\n\\\n *\\n\\\n * @param {vec4} plane The plane in Hessian Normal Form.\\n\\\n * @param {mat4} transform The inverse-transpose of a transformation matrix.\\n\\\n */\\n\\\nvec4 czm_transformPlane(vec4 plane, mat4 transform) {\\n\\\n    vec4 transformedPlane = transform * plane;\\n\\\n    // Convert the transformed plane to Hessian Normal Form\\n\\\n    float normalMagnitude = length(transformedPlane.xyz);\\n\\\n    return transformedPlane / normalMagnitude;\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"d97242c164ac84988e8eab2b8ce018b3","cacheData":{"env":{}}}