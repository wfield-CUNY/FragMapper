{"id":"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalFS.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"#if defined(HAS_NORMALS) && !defined(HAS_TANGENTS) && !defined(LIGHTING_UNLIT)\\n\\\n    #ifdef GL_OES_standard_derivatives\\n\\\n    #extension GL_OES_standard_derivatives : enable\\n\\\n    #endif\\n\\\n#endif\\n\\\n\\n\\\nczm_modelMaterial defaultModelMaterial()\\n\\\n{\\n\\\n    czm_modelMaterial material;\\n\\\n    material.diffuse = vec3(1.0);\\n\\\n    material.specular = vec3(0.04); // dielectric (non-metal)\\n\\\n    material.roughness = 0.0;\\n\\\n    material.occlusion = 1.0;\\n\\\n    material.normalEC = vec3(0.0, 0.0, 1.0);\\n\\\n    material.emissive = vec3(0.0);\\n\\\n    material.alpha = 1.0;\\n\\\n    return material;\\n\\\n}\\n\\\n\\n\\\nvec4 handleAlpha(vec3 color, float alpha)\\n\\\n{\\n\\\n    #ifdef ALPHA_MODE_MASK\\n\\\n    if (alpha < u_alphaCutoff) {\\n\\\n        discard;\\n\\\n    }\\n\\\n    return vec4(color, 1.0);\\n\\\n    #elif defined(ALPHA_MODE_BLEND)\\n\\\n    return vec4(color, alpha);\\n\\\n    #else // OPAQUE\\n\\\n    return vec4(color, 1.0);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\nFeature feature;\\n\\\n\\n\\\nvoid main() \\n\\\n{\\n\\\n    czm_modelMaterial material = defaultModelMaterial();\\n\\\n\\n\\\n    ProcessedAttributes attributes;\\n\\\n    geometryStage(attributes);\\n\\\n\\n\\\n    #ifdef HAS_FEATURES\\n\\\n    featureStage(feature);\\n\\\n    #endif\\n\\\n\\n\\\n\\n\\\n    #ifndef CUSTOM_SHADER_REPLACE_MATERIAL\\n\\\n    materialStage(material, attributes, feature);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_CUSTOM_FRAGMENT_SHADER\\n\\\n    customShaderStage(material, attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    lightingStage(material);\\n\\\n\\n\\\n    #ifdef HAS_FEATURES\\n\\\n    cpuStylingStage(material, feature);\\n\\\n    #endif\\n\\\n    \\n\\\n    #ifdef HAS_MODEL_COLOR\\n\\\n    modelColorStage(material);\\n\\\n    #endif \\n\\\n\\n\\\n    vec4 color = handleAlpha(material.diffuse, material.alpha);\\n\\\n\\n\\\n    gl_FragColor = color;\\n\\\n}\\n\\\n\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalFS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalFS.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/ModelExperimental/ModelExperimentalFS.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"#if defined(HAS_NORMALS) && !defined(HAS_TANGENTS) && !defined(LIGHTING_UNLIT)\\n\\\n    #ifdef GL_OES_standard_derivatives\\n\\\n    #extension GL_OES_standard_derivatives : enable\\n\\\n    #endif\\n\\\n#endif\\n\\\n\\n\\\nczm_modelMaterial defaultModelMaterial()\\n\\\n{\\n\\\n    czm_modelMaterial material;\\n\\\n    material.diffuse = vec3(1.0);\\n\\\n    material.specular = vec3(0.04); // dielectric (non-metal)\\n\\\n    material.roughness = 0.0;\\n\\\n    material.occlusion = 1.0;\\n\\\n    material.normalEC = vec3(0.0, 0.0, 1.0);\\n\\\n    material.emissive = vec3(0.0);\\n\\\n    material.alpha = 1.0;\\n\\\n    return material;\\n\\\n}\\n\\\n\\n\\\nvec4 handleAlpha(vec3 color, float alpha)\\n\\\n{\\n\\\n    #ifdef ALPHA_MODE_MASK\\n\\\n    if (alpha < u_alphaCutoff) {\\n\\\n        discard;\\n\\\n    }\\n\\\n    return vec4(color, 1.0);\\n\\\n    #elif defined(ALPHA_MODE_BLEND)\\n\\\n    return vec4(color, alpha);\\n\\\n    #else // OPAQUE\\n\\\n    return vec4(color, 1.0);\\n\\\n    #endif\\n\\\n}\\n\\\n\\n\\\nFeature feature;\\n\\\n\\n\\\nvoid main() \\n\\\n{\\n\\\n    czm_modelMaterial material = defaultModelMaterial();\\n\\\n\\n\\\n    ProcessedAttributes attributes;\\n\\\n    geometryStage(attributes);\\n\\\n\\n\\\n    #ifdef HAS_FEATURES\\n\\\n    featureStage(feature);\\n\\\n    #endif\\n\\\n\\n\\\n\\n\\\n    #ifndef CUSTOM_SHADER_REPLACE_MATERIAL\\n\\\n    materialStage(material, attributes, feature);\\n\\\n    #endif\\n\\\n\\n\\\n    #ifdef HAS_CUSTOM_FRAGMENT_SHADER\\n\\\n    customShaderStage(material, attributes);\\n\\\n    #endif\\n\\\n\\n\\\n    lightingStage(material);\\n\\\n\\n\\\n    #ifdef HAS_FEATURES\\n\\\n    cpuStylingStage(material, feature);\\n\\\n    #endif\\n\\\n    \\n\\\n    #ifdef HAS_MODEL_COLOR\\n\\\n    modelColorStage(material);\\n\\\n    #endif \\n\\\n\\n\\\n    vec4 color = handleAlpha(material.diffuse, material.alpha);\\n\\\n\\n\\\n    gl_FragColor = color;\\n\\\n}\\n\\\n\";\n"},"lineCount":null}},"error":null,"hash":"f3436959ea777322eed1f26c02a467db","cacheData":{"env":{}}}