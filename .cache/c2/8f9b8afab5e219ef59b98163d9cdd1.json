{"id":"node_modules/cesium/Source/Shaders/ModelExperimental/CPUStylingStageVS.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n//This file is automatically rebuilt by the Cesium build process.\nvar _default = \"void filterByPassType(inout vec3 positionMC, vec4 featureColor)\\n\\\n{\\n\\\n    bool styleTranslucent = (featureColor.a != 1.0);\\n\\\n    // Only render translucent features in the translucent pass (if the style or the original command has translucency).\\n\\\n    if (czm_pass == czm_passTranslucent && !styleTranslucent && !model_commandTranslucent)\\n\\\n    {\\n\\\n        positionMC *= 0.0;\\n\\\n    }\\n\\\n    // If the current pass is not the transluceny pass and the style is not translucent, don't rendeer the feature.\\n\\\n    else if (czm_pass != czm_passTranslucent && styleTranslucent)\\n\\\n    {\\n\\\n        positionMC *= 0.0;\\n\\\n    }\\n\\\n}\\n\\\n\\n\\\nvoid cpuStylingStage(inout vec3 positionMC, inout Feature feature)\\n\\\n{\\n\\\n    float show = ceil(feature.color.a);\\n\\\n    positionMC *= show;\\n\\\n\\n\\\n    filterByPassType(positionMC, feature.color);\\n\\\n}\";\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":7,"column":0},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/CPUStylingStageVS.js","original":{"line":1,"column":0}},{"generated":{"line":8,"column":15},"source":"node_modules/cesium/Source/Shaders/ModelExperimental/CPUStylingStageVS.js","original":{"line":2,"column":15}}],"sources":{"node_modules/cesium/Source/Shaders/ModelExperimental/CPUStylingStageVS.js":"//This file is automatically rebuilt by the Cesium build process.\nexport default \"void filterByPassType(inout vec3 positionMC, vec4 featureColor)\\n\\\n{\\n\\\n    bool styleTranslucent = (featureColor.a != 1.0);\\n\\\n    // Only render translucent features in the translucent pass (if the style or the original command has translucency).\\n\\\n    if (czm_pass == czm_passTranslucent && !styleTranslucent && !model_commandTranslucent)\\n\\\n    {\\n\\\n        positionMC *= 0.0;\\n\\\n    }\\n\\\n    // If the current pass is not the transluceny pass and the style is not translucent, don't rendeer the feature.\\n\\\n    else if (czm_pass != czm_passTranslucent && styleTranslucent)\\n\\\n    {\\n\\\n        positionMC *= 0.0;\\n\\\n    }\\n\\\n}\\n\\\n\\n\\\nvoid cpuStylingStage(inout vec3 positionMC, inout Feature feature)\\n\\\n{\\n\\\n    float show = ceil(feature.color.a);\\n\\\n    positionMC *= show;\\n\\\n\\n\\\n    filterByPassType(positionMC, feature.color);\\n\\\n}\";\n"},"lineCount":null}},"error":null,"hash":"297c2a546e74b2334a4262d57e3ac045","cacheData":{"env":{}}}