{"id":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","dependencies":[{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\package.json","includedInParent":true,"mtime":1640105766009},{"name":"D:\\Users\\Will\\Documents\\CUNY\\Research\\FragMapper\\node_modules\\cesium\\package.json","includedInParent":true,"mtime":1640105765416}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\n/**\n * The lighting model to use for lighting a {@link ModelExperimental}.\n *\n * @enum {Number}\n *\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nvar LightingModel = {\n  /**\n   * Use unlit shading, i.e. skip lighting calculations. The model's\n   * diffuse color (assumed to be linear RGB, not sRGB) is used directly\n   * when computing <code>gl_FragColor</code>. The alpha mode is still\n   * applied.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNLIT: 0,\n\n  /**\n   * Use physically-based rendering lighting calculations. This includes\n   * both PBR metallic roughness and PBR specular glossiness. Image-based\n   * lighting is also applied when possible.\n   *\n   * @type {Number}\n   * @constant\n   */\n  PBR: 1\n};\n\nvar _default = Object.freeze(LightingModel);\n\nexports.default = _default;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":1,"column":0}},{"generated":{"line":15,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":8,"column":0}},{"name":"LightingModel","generated":{"line":15,"column":4},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":8,"column":4}},{"generated":{"line":15,"column":17},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":8,"column":17}},{"generated":{"line":15,"column":20},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":8,"column":20}},{"generated":{"line":16,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":9,"column":2}},{"name":"UNLIT","generated":{"line":25,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":18,"column":2}},{"name":"UNLIT","generated":{"line":25,"column":2},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":18,"column":2}},{"generated":{"line":25,"column":7},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":18,"column":7}},{"generated":{"line":25,"column":9},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":18,"column":9}},{"generated":{"line":25,"column":10},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":8,"column":20}},{"generated":{"line":27,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":19,"column":2}},{"name":"PBR","generated":{"line":35,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":27,"column":2}},{"name":"PBR","generated":{"line":35,"column":2},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":27,"column":2}},{"generated":{"line":35,"column":5},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":27,"column":5}},{"generated":{"line":35,"column":7},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":27,"column":7}},{"generated":{"line":36,"column":0},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":8,"column":20}},{"generated":{"line":36,"column":1},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":8,"column":0}},{"name":"Object","generated":{"line":38,"column":15},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":30,"column":15}},{"generated":{"line":38,"column":21},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":30,"column":21}},{"name":"freeze","generated":{"line":38,"column":22},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":30,"column":22}},{"generated":{"line":38,"column":28},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":30,"column":15}},{"name":"LightingModel","generated":{"line":38,"column":29},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":30,"column":29}},{"generated":{"line":38,"column":42},"source":"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js","original":{"line":30,"column":15}}],"sources":{"node_modules/cesium/Source/Scene/ModelExperimental/LightingModel.js":"/**\n * The lighting model to use for lighting a {@link ModelExperimental}.\n *\n * @enum {Number}\n *\n * @experimental This feature is using part of the 3D Tiles spec that is not final and is subject to change without Cesium's standard deprecation policy.\n */\nvar LightingModel = {\n  /**\n   * Use unlit shading, i.e. skip lighting calculations. The model's\n   * diffuse color (assumed to be linear RGB, not sRGB) is used directly\n   * when computing <code>gl_FragColor</code>. The alpha mode is still\n   * applied.\n   *\n   * @type {Number}\n   * @constant\n   */\n  UNLIT: 0,\n  /**\n   * Use physically-based rendering lighting calculations. This includes\n   * both PBR metallic roughness and PBR specular glossiness. Image-based\n   * lighting is also applied when possible.\n   *\n   * @type {Number}\n   * @constant\n   */\n  PBR: 1,\n};\n\nexport default Object.freeze(LightingModel);\n"},"lineCount":null}},"error":null,"hash":"a8f7da8713a84ba93b78a637f367b138","cacheData":{"env":{}}}